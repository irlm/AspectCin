<!--

  Copyright (C) The Community OpenORB Project. All rights reserved.
 
  This software is published under the terms of The OpenORB Community Software
  License version 1.0, a copy of which has been included with this distribution
  in the LICENSE.txt file.
  
-->

<!-- 
    This is a DTD for the OpenORB config file. It can be used when verifying 
    OpenORB configurations, but is optional to reference from config files.

    When used in public doctypes the public reference:
    "-//openorb.sf.net//OpenORB Config//EN" may be used.
-->

<!ENTITY % ns "http://openorb.sf.net/config/3.0/OpenORB.dtd" >

<!--
    Document root element. Profile gives the ID of the default profile and
    may define a base reference for the links within the document.
-->
<!ELEMENT OpenORB (description?,(module|profile)*)>
<!ATTLIST OpenORB
        xmlns       CDATA           #FIXED    "%ns;"
	profile     IDREF           "default"
        xml:base    CDATA           #IMPLIED
>

<!--
    A module defines a namespace for it's properties
    and can have an initializer. It may also import other modules.
-->
<!ELEMENT module (description?,(property|import|propalias)*)>
<!ATTLIST module
        xmlns       CDATA           #FIXED      "%ns;"
	name        ID              #REQUIRED
	initializer NMTOKEN         #IMPLIED
>

<!--
    Define a short alias for certain common properites to use on the
    command line.
-->
<!ELEMENT propalias EMPTY>
<!ATTLIST propalias
        xmlns       CDATA           #FIXED      "%ns;"
	name        NMTOKEN         #REQUIRED
	alias       NMTOKEN         #REQUIRED
>


<!--
    The associations element defines default profiles for specific users.
-->
<!ELEMENT associations (association)*>
<!ATTLIST associations 
        xmlns       CDATA           #FIXED      "%ns;"
>

<!--
    If the user.name java system property matches 
-->
<!ELEMENT association EMPTY>
<!ATTLIST association 
        xmlns       CDATA           #FIXED      "%ns;"
        user        NMTOKENS        #REQUIRED
        profile     IDREF           #REQUIRED
>

<!--
    Define a property. The actual property name will be prefixed with
    "<modulename>." unless the root attribute is true.
-->
<!ELEMENT property (description?)>
<!ATTLIST property
        xmlns       CDATA           #FIXED      "%ns;"
	name        NMTOKEN         #REQUIRED
	value       CDATA           "true"
	root        (true|false)    "false"
>

<!--
    Import a module or profile. Properties defined within the import statement
    will use the module name from the imported module for prefixing.
    
    Modules in this config file, in other config files and in properties files
    can be loaded.

    When importing a profile or properties from a properties file it is not
    possible to define properties as child elements of the import statement,
    this results in an error. 

    Usage examples:
    
    <import module="mod" />  
        This imports the module with name 'mod' from the current config file. 

    <import profile="pro" /> 
        This imports the profile 'pro' from the current config
        file. Profile imports can be used only by profiles.

    <import xlink:href="http://www.myhost.com/openorb/OpenORB.xml#mod" />
        This imports the module/profile named 'mod' from the config file
        obtained from the given URL. This, and any other href can import
        both modules and profiles, however imported profiles cannot set
        properties as child elements.

    <import xlink:href="#mod" />
    <import xlink:href="../OpenORB.xml#mod" />
        Use the base URL of this document. The base URL for this document will
        either be a href to the document itself, or whatever is set by the
        xml:base attribute of the OpenORB element.

    <import xlink:href="resource:/org/openorb/config/OpenORB.xml#mod" />
        The resource protocol causes it's file to be loaded using the java
        getSystemResource function, loading the file off the classpath.

    <import xlink:href="resource://org.openorb.ReleaseInfo/config/OpenORB.xml#mod" />
    <import xlink:href="resource://org.openorb.ReleaseInfo//org/openorb/config/OpenORB.xml#mod" />
        This version of the resource protocol uses the getResource funtion on 
        the Class object named org.openorb.ReleaseInfo to generate the URL for
        the target.

    <import xlink:href="${openorb.home}config/OpenORB.xml#mod" />
        ${openorb.home} gets expanded to the URL property setting of 
        openorb.home, which is generaly "resource:/org/openorb/", and the 
        remainder of the href is resolved relative to it. Any property value
        which has been set before the import can be used in the expansion.
        This includes the java system properties, openorb.home and 
        openorb.config. Any property appearing at position 0 must be a URL
        property.

    <import xlink:href="${openorb.home}config/${user.name}/OpenORB.xml#mod" />
        A variation of the above, here the second property is resolved as a 
        string.

    <import xlink:href="${openorb.config}RMIoverIIOP.xml" />
        Import all the modules imported by the default profile in the given
        config file. Note that as ${openorb.config} appears at the start of 
        the href the RMIoverIIOP.xml file will be a URL relative to the 
        config URL.

    <import xlink:href="${user.home}extra.properties" />
        Import all the properties contained in the java properties file
        "extra.properties" contained in the user's home directory. This style
        of import element cannot have property child elements.

    <import xlink:href="${user.home}extra.properties#module" />
        Import all the properties, prefixing "module." to all the properties
        within the file. This import style can have property child elements.
        
-->
<!ELEMENT import (description?,property*)>
<!ATTLIST import
        xmlns       CDATA           #FIXED      "%ns;"
	module      IDREF           #IMPLIED
	profile     IDREF           #IMPLIED
	xmlns:xlink CDATA           #FIXED      "http://www.w3.org/1999/xlink"
  	xlink:type  (simple)        #FIXED      "simple"
	xlink:href  CDATA           #IMPLIED
>

<!--
    Profiles can be selected from the command line and provide entry points
    for the configurator. 

    Profiles may extend preexisting profiles within this config file using
    the extends attribute, and within other property files using the xlink:href
    attribute. The allowable hrefs are a subset of those allowed in the import
    statement; the target must be a profile and the file must be an xml file.
-->
<!ELEMENT profile (description?,import*)>
<!ATTLIST profile
        xmlns       CDATA           #FIXED      "%ns;"
	name        ID              #REQUIRED
	extends     IDREF           #IMPLIED
	xmlns:xlink CDATA           #FIXED      "http://www.w3.org/1999/xlink"
  	xlink:type  (simple)        #FIXED      "simple"
	xlink:href  CDATA           #IMPLIED
>

<!-- Description of module, profile, property or import -->
<!ELEMENT description (#PCDATA|p)* >
<!ATTLIST description
        xmlns       CDATA           #FIXED      "%ns;"
>

<!-- Paragraph mark in description -->
<!ELEMENT p EMPTY>
<!ATTLIST p
        xmlns       CDATA           #FIXED      "%ns;"
>
