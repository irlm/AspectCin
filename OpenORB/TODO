=======================================
ORB TODO/ROADMAP
=======================================

OpenORB 2.0
----------------------------------------------------------------------

- Switch to JDK 1.4's NIO infrastructure
    * Leverage the new IO for a better performance (this
      will break support for JDK1.3.x): Buffers and Selectors
    * Use the Charset class for the CodesetDatabase. 

- Provide JMX interface to core components

- Rewrite of IDL compiler (Jesper Pedersen)
   NOTE: This will require rewriting Java2Idl and PsdlCompiler !!!!!
     * use JavaCC
     * Check for invalid IDL
     * fix bugs #515921,515917,515912,515909,515871,515870,501333
     * Add dependency support to the IDLCompiler/Java2Idl/PSDCompiler.
       Do not overwrite files when they are newer than the source
       files from which they are created (Exolab Bug/Feature #448)
     * It should be possible to map prefixes to packages individualy.
       The default behaviour, reversing the prefix, should still 
       apply, however it would be nice to have:  java 
       org.openorb.compiler.IdlCompiler -mapPrefix mycom.com 
                com.mycom.someapp
       and to have a pragma for using in the IDL files:
       #pragma mapPrefix "mycom.com" "com.myapp.someapp"
     * Convert the IdlCompiler to use non-static variables, so that
       it can be used in process multiple times.
     * Convert the idl tools like IdlDoc (RTF/HTML) to compiler
       backends (remove them completely as they are hard to maintain)
     * Add a cache to the compiler. A flag -usecache=<cachedir> could
       be used to hold the generated files and the corresponding class
       files in the directory.
     * Add an option to the compiler to create the class files
       from the sources automatically.
     * Emacs friendly output of error messages or warnings.
     * possibility to redirect the, i.e. do not use System.out directly
       for printing error/warning messages.
     * pseudo flag to compile the pseudo idl files. Now we compile orb.idl
       and delete the exceptions afterwards because the exceptions do not
       inherit from the right base class.

- Get OMG tags for The Community OpenORB/Apache ORB
    http://www.omg.org/docs/ptc/02-04-02.txt
    FAQ is: http://www.omg.org/cgi-bin/doc?ptc/99-02-01


OpenORB 1.x
----------------------------------------------------------------------

- Add the following attribute to all Javadoc tasks
   additionalparam="-J-DproxyHost=${proxy.host} -J-DproxyPort=${proxy.port}"
  to make Javadoc links work behind a Proxy.

- Check whether the _Remote_Stub.java must be moved into the package
   org/omg/stub/java/rmi/_Remote_Stub.java like it is in Sun JDK.

- Check whether we need the classes:
    src/omg/org/omg/CORBA/UnknownUserExceptionHelper.java
    src/omg/org/omg/CORBA/UnknownUserExceptionHolder.java
  as they are contained in the rt.jar but not in OpenORB's endorsed jar.

- Check the latest 2.4.2/2.5/2.6/3.0 spec. for missing points.
    -> Align the ORB to the 3.0 spec.

- Convert the french comments/variables/methods into english.

- Check the exception minor codes and align them to the spec.

- Fix all Jikes issues

- Add an example for the "ignoreXML" switch.

- The COMM_FAILURE exception is errorneously thrown inside the ORB
  for example when a connection couldn't be established. The recent fix
  for bug #515918 solves the issue by converting the issue into
  a TRANSIENT exception at the boundary to the client's code.
  Internally the COMM_FAILURE is still used at many places where
  the TRANSIENT should be thrown.

- Remove TODO: comments from the core.

- Write documentation for the java2idl task

JUnit:
--------------------

- Add some JUnit tests for disorderly shutdown to StateTest.
- Check the DynAnyTest case

RMIoverIIOP
--------------------

- Make the compiler detect when to add "org.omg.stub"
  prefix to generated stubs. See issue 2804 for details.

- Make the RMIoverIIOP kernel accept stubs with the
  package prefix "org.omg.stub".

- Enable the RMIoverIIOP compiler to generate ties
  from impl classes and the kernel to load ties
  generated from impl classes.

- Make the creation of CORBA clients not interfere
  with the RMI-IIOP interfaces:
     Interface: RemoteHello.java
     JavaToIdl -> RemoteHello.idl
     IdlCompiler -> RemoteHello.java
  This class interfers with the original Java interface.
  Resolving this conflict is very hard when the compiler
  does not support the conflict resolution...

- Add a check whether a Remote Interface is found at all
  in the derivation hierarchy. Currently the JavaToIdl compiler
  tells the user that it is generating ties and stubs
  ("-verbose -tie -stub" flags have been specified) but 
  nothing is done. This is very hard to find because there
  is no indication that no Remote interface was found.

- Minor codes for all MARSHAL exceptions

- Add a classpath tag to a java2idl task.

