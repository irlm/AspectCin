NEWS
----

Aug 26, 2003 - Release 2.2 "The evolution continues"
---------------------------------------------------

  - Lots of new documentation - the public classes are better
    documented although aspects still lack Javadoc documentation
    because of ajdoc being absent from the new AspectJ release. We
    also have some write-ups on the architecture of FACET, the Feature
    Registry etc.

  - Due to popular demand, FACET has been ported to AspectJ 1.1. This
    was long overdue, of course. Please do report any problems that
    you encounter.

  - We now have a daily build scoreboard which tests FACET everyday -
    this is the first release to come out with extensive testing of
    all configurations - CORBA and non-CORBA.

  - Thanks to a lot of hell from static libraries in compiling to
    native code, FACET has moved to a shared library approach - all
    libraries built are .so
 
  - Native code compilation with CORBA or tracing enabled is
    unsupported henceforth (libjacorb and liblog4j are not built
    any more). Also, disabling CORBA ensures that no references to any CORBA
    types exist (which was a problem with earlier releases).
  
  - Compiling with no_unittests is once more supported. This ensures
    that an absolutely minimal libfacet is built with no references to
    libjunit or libutils (for unit tests). 

  - We do not depend on Doug Lea's Concurrency library any more - the
    necessary classes are now part of facet.utils.concurrent.

 
July 2, 2003 - Release 2.1 "Oops, I forgot to check the features again!"
------------------------------------------------------------------------

  - New and improved build process. Feature dependencies are
    generated at the start of the build process so there is no need
    for 'ant featuredeps'

  - A new feature validator runs as part of the build process to
    ensure that features selected are consistent and flags an error if
    they are not. This means that the build process will not proceed
    until the feature set satisfies the constraints imposed. 

    In short, you won't have to see compile errors for selecting the
    wrong features anymore.

  - All build targets have been updated to names which are more
    consistent, readable and sensible

  - Build target 'featuredeps' is now 'feature.deps'

  - Pavan Mandalkar wrote the RtecCorrelationFilter feature which aims
    to make FACET behave like the TAO RTEC's correlation module.


Jun 18, 2003 - Release 2.0 "PCES of Pisces"
-------------------------------------------

  - FACET once again compiles with gcj correctly. The focus in this
    release has been to facilitate use of FACET in C++ applications
    via use of the CNI.

  - Fixes to make FACET compatible with the TAO adapter layer

  - Other bug fixes and the like


Feb 20, 2003 - Release 1.0 "Making it facile with FACET"
--------------------------------------------------------

  FACET finally makes it to 1.0 after a really, really long time! Here
  is a quick rundown of features available:

    - The use of CORBA is now optional and is feature selectable,
      EnableCorba, DisableCorba etc.

    - Support for real-time dispatching via the RealtimeDispatcher
      feature. This makes use of RT Java

    - Source filtering is now available as a feature

    - Lots of other minor details in the build process


  Ravi Pratap M has now taken over from Frank Hunleth as the current
  maintainer of FACET.
