<?xml version="1.0"?>

<!-- $Id: gcj.xml,v 1.14 2003/08/21 16:42:05 ravip Exp $ -->

<!--+
    | gcj.xml
    |
    | Build static libraries out of required jar files to run
    | facet.
    +-->

<project name="gcj" default="all" basedir=".">

   <!-- Use our batch extension.  If receive an error here, just make
        sure that the edu/wustl/doc/ant/taskdefs directory has been
        built. -->
   <taskdef name="batch" classname="edu.wustl.doc.ant.taskdefs.Batch"/>

   <!-- Include global platform property settings. -->
   <property name="platform.properties.file"
             value="${basedir}/platform.properties"/>
   <property file="${platform.properties.file}"/>

   <!-- Define some convenient properties that will be used later -->
   <property name="dirs.base" value="${basedir}"/>
   <property name="classdir" value="${dirs.base}/classes"/>

   <property name="libdir" value="${dirs.base}/lib"/>
   <property name="gcjdir" value="${dirs.base}/gcj"/>

   <target name="all" 
      depends="init, libaspectjrt, libjunit">
   </target>

   <target name="init">
      <delete dir="${gcjdir}"/>
      <mkdir dir="${gcjdir}"/>
      <!--unjar src="${gcjlib.concurrent.jar}" dest="${gcjdir}/libconcurrent"/-->
      <unjar src="${gcjlib.junit.jar}" dest="${gcjdir}/libjunit"/>
      <unjar src="${gcjlib.aspectjrt.jar}" dest="${gcjdir}/libaspectjrt"/>
      <!--unjar src="${gcjlib.log4j.jar}" dest="${gcjdir}/liblog4j"/-->
   </target>

   <target name="libconcurrent">
        
        <delete>
           <fileset dir="${gcjdir}/libconcurrent" includes="EDU/oswego/cs/dl/util/concurrent/misc/**"/>
        </delete>
        
        <echo message="Compiling files to native code ..."/>

        <apply executable="gcj" dest="${gcjdir}"
               failonerror="true" parallel="false">
          <arg value="-g"/>
          <arg value="-c"/>
          <arg value="--classpath"/>
          <arg value="${gcjdir}/libconcurrent"/>
          <arg value="-o"/>
          <targetfile/>
          <srcfile/>
          <fileset dir="${gcjdir}" includes="libconcurrent/**/*.class"/>
          <mapper type="glob" from="*.class" to="*.o"/>
        </apply>

        <echo message="Generating library ..."/>

        <apply executable="gcc" dest="${libdir}" parallel="true" 
               failonerror="true" skipemptyfilesets="true">
          <arg value="-shared"/>
          <arg value="-o"/>
          <targetfile/>
          <srcfile/>
          <fileset dir="${gcjdir}/libconcurrent" includes="**/*.o"/>
          <mapper type="merge" to="libconcurrent.so"/>
        </apply>

   </target>

   <target name="libjunit">
 
        <delete>
           <fileset dir="${gcjdir}/libjunit" includes="junit/awtui/**"/>
           <fileset dir="${gcjdir}/libjunit" includes="junit/swingui/**"/>
           <fileset dir="${gcjdir}/libjunit" includes="junit/ui/**"/>
        </delete>
 
        <echo message="Compiling files to native code ..."/>

       <apply executable="gcj" dest="${gcjdir}"
               failonerror="true" parallel="false">
          <arg value="-g"/>
          <arg value="-c"/>
          <arg value="-fassume-compiled"/>
          <arg value="--classpath"/>
          <arg value="${gcjdir}/libjunit"/>
          <arg value="-o"/>
          <targetfile/>
          <srcfile/>
          <fileset dir="${gcjdir}" includes="libjunit/**/*.class"/>
          <mapper type="glob" from="*.class" to="*.o"/>
        </apply>
 
        <echo message="Generating library ..."/>

        <apply executable="gcc" dest="${libdir}" parallel="true"
            failonerror="true" skipemptyfilesets="true">
          <arg value="-shared"/>
          <arg value="-o"/>
          <targetfile/>
          <srcfile/>
          <fileset dir="${gcjdir}/libjunit" includes="**/*.o"/>
          <mapper type="merge" to="libjunit.so"/>
        </apply>

   </target>

   <target name="libaspectjrt">
        
      <echo message="Compiling files to native code ..."/>

       <apply executable="gcj" dest="${gcjdir}"
               failonerror="true" parallel="false">
          <arg value="-g"/>
          <arg value="-c"/>
          <arg value="-fassume-compiled"/>
          <arg value="--classpath"/>
          <arg value="${gcjdir}/libaspectjrt"/>
          <arg value="-o"/>
          <targetfile/>
          <srcfile/>
          <fileset dir="${gcjdir}" includes="libaspectjrt/**/*.class"/>
          <mapper type="glob" from="*.class" to="*.o"/>
        </apply>
 
        <echo message="Generating library ..."/>

        <apply executable="gcc" dest="${libdir}" parallel="true"
            failonerror="true" skipemptyfilesets="true">
          <arg value="-shared"/>
          <arg value="-o"/>
          <targetfile/>
          <srcfile/>
          <fileset dir="${gcjdir}/libaspectjrt" includes="**/*.o"/>
          <mapper type="merge" to="libaspectjrt.so"/>
        </apply>
   </target>

   <target name="liblog4j">
        
        <delete>
           <fileset dir="${gcjdir}/liblog4j" includes="org/apache/log4j/chainsaw/*"/>
           <fileset dir="${gcjdir}/liblog4j" includes="org/apache/log4j/jmx/*"/>
           <fileset dir="${gcjdir}/liblog4j" includes="org/apache/log4j/nt/NTEventLogAppender*"/>
           <fileset dir="${gcjdir}/liblog4j" includes="org/apache/log4j/or/jms/*"/>
           <fileset dir="${gcjdir}/liblog4j" includes="org/apache/log4j/or/sax/*"/>
           <fileset dir="${gcjdir}/liblog4j" includes="org/apache/log4j/or/helpers/OptionConverter.*"/>
           <fileset dir="${gcjdir}/liblog4j" includes="org/apache/log4j/lf5/**"/>
           <fileset dir="${gcjdir}/liblog4j" includes="org/apache/log4j/net/*"/>
           <fileset dir="${gcjdir}/liblog4j" includes="org/apache/log4j/xml/*"/>
        </delete>

       <echo message="Compiling files to native code ..."/>

       <apply executable="gcj" dest="${gcjdir}"
               failonerror="true" parallel="false">
          <arg value="-g"/>
          <arg value="-c"/>
          <arg value="-fassume-compiled"/>
          <arg value="--classpath"/>
          <arg value="${gcjdir}/liblog4j"/>
          <arg value="-o"/>
          <targetfile/>
          <srcfile/>
          <fileset dir="${gcjdir}" includes="liblog4j/**/*.class"/>
          <mapper type="glob" from="*.class" to="*.o"/>
        </apply>
 
        <echo message="Generating library ..."/>

        <apply executable="gcc" dest="${libdir}" parallel="true"
            failonerror="true" skipemptyfilesets="true">
          <arg value="-shared"/>
          <arg value="-o"/>
          <targetfile/>
          <srcfile/>
          <fileset dir="${gcjdir}/liblog4j" includes="**/*.o"/>
          <mapper type="merge" to="liblog4j.so"/>
        </apply>

   </target>

   <target name="libjacorb">

       <delete dir="${gcjdir}/libjacorb"/>      
              <unjar src="${gcjlib.jacorb.jar}" dest="${gcjdir}/libjacorb"/> 

       <!-- We don't need a lot of stuff since we want to be as light
               as possible -->

       <delete>
          <fileset dir="${gcjdir}/libjacorb" 
                       excludes="org/jacorb/ir/**,
                                 org/jacorb/orb/*,
                                 org/jacorb/orb/connection/*,
                                 org/jacorb/orb/domain/**,
                                 org/jacorb/orb/factory/*,
                                 org/jacorb/orb/util/*,
                                 org/jacorb/orb/dii/**,
                                 org/jacorb/orb/dsi/**,
                                 org/jacorb/orb/dns/**,
                                 org/jacorb/orb/policies/**,
                                 org/jacorb/orb/dynany/**,
                                 org/jacorb/orb/portableInterceptor/**,
                                 org/jacorb/poa/*,
                                 org/jacorb/poa/util/*,
                                 org/jacorb/poa/policy/*,
                                 org/jacorb/poa/except/*,
                                 org/jacorb/util/**,
                                 org/jacorb/transaction/**,
                                 org/omg/BiDirPolicy/**,
                                 org/omg/CONV_FRAME/**,
                                 org/omg/CORBA/**,
                                 org/omg/CSIIOP/**,
                                 org/omg/IIOP/**,
                                 org/omg/IOP/**,
                                 org/omg/IOP_N/**,
                                 org/omg/SSLIOP/**,
                                 org/omg/GIOP/**,
                                 org/omg/CORBA/**,
                                 org/omg/CORBA_2_3/**,
                                 org/omg/CORBA_2_5/**,
                                 org/omg/Dynamic/**,
                                 org/omg/DynamicAny/**,
                                 org/omg/PortableServer/**,
                                 org/omg/PortableInterceptor/**,
                                 org/omg/CosNaming/**,
                                 org/omg/CosTransactions/**,
                                 org/omg/Security/**,
                                 org/omg/SecurityLevel*/**,
                                 org/omg/TimeBase/**"/>
          <fileset dir="${gcjdir}/libjacorb" 
                       includes="org/jacorb/util/tracing/**,
                                 org/jacorb/util/CAD*,
                                 org/jacorb/poa/*MonitorImpl*,
                                 org/jacorb/util/ValueHandler*"/>
       </delete>

       <echo message="Compiling files to native code ..."/>

       <apply executable="gcj" dest="${gcjdir}"
               failonerror="true" parallel="false">
          <arg value="-g"/>
          <arg value="-c"/>
          <arg value="-fassume-compiled"/>
          <arg value="--classpath"/>
          <arg value="${gcjdir}/libjacorb"/>
          <arg value="-o"/>
          <targetfile/>
          <srcfile/>
          <fileset dir="${gcjdir}" includes="libjacorb/**/*.class"/>
          <mapper type="glob" from="*.class" to="*.o"/>
        </apply>
 
        <echo message="Generating library ..."/>

        <!-- We generate the libraries in two stages because there are
             just too many files on one command line for the ant task to
             handle -->

        <apply executable="gcc" dest="${libdir}" parallel="true"
            failonerror="true" skipemptyfilesets="true">
          <arg value="-shared"/>
          <arg value="-o"/>
          <targetfile/>
          <srcfile/>
          <fileset dir="${gcjdir}/libjacorb/org/jacorb" includes="**/*.o"/>
          <mapper type="merge" to="libjacorb-org-jacorb.so"/>
        </apply>

        <apply executable="gcc" dest="${libdir}" parallel="true"
            failonerror="true" skipemptyfilesets="true">
          <arg value="-shared"/>
          <arg value="-o"/>
          <targetfile/>
          <srcfile/>
          <fileset dir="${gcjdir}/libjacorb/org/omg" includes="**/*.o"/>
          <mapper type="merge" to="libjacorb-org-omg.so"/>
        </apply>
 
        <exec executable="gcc" dir="${libdir}" failonerror="true">
           <arg line="-shared -o libjacorb.so libjacorb-org-jacorb.so libjacorb-org-omg.so"/>
        </exec>

   </target>

   <target name="realclean" depends="clean">
      <delete dir="${gcjdir}"/>
   </target>

   <target name="clean">
           <delete file="${libdir}/libconcurrent.so"/>
           <delete file="${libdir}/libjacorb.so"/>
           <delete file="${libdir}/libjacorb-org-jacorb.so"/>
           <delete file="${libdir}/libjacorb-org-omg.so"/>
           <delete file="${libdir}/libjunit.so"/>
           <delete file="${libdir}/libaspectjrt.so"/>
           <delete file="${libdir}/liblog4j.so"/>
   </target>

</project>
