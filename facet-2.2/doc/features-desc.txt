FACET's Features
----------------

FACET is an implementation of a CORBA Event Channel as mandated in the
OMG Event Services specification. It differs from other
implementations of an event service in that it allows you to finely
control exactly what features you want included. Specifying this is
usually a matter of editing a configuration file and then setting off
the build process that produces an event channel built with only the
features you need - What You Want Is What You Get. Using this Event
Channel in your application is no different from how you would use any
other event service implementation.

This ability to finely control features allows one to precisely
control aspects such as footprint and throughput performance. Since
one is not including any features that are not of interest, there is
no performance penalty or bloat because of redundant but present
features.

Most of these features are based on the TAO RTEC's feature set. What
follows is a brief description of each feature.


- 'EnableCorba' and 'DisableCorba'

  These features control whether the event channel is a full-fledged
  CORBA application or is a simple Java application with the use of
  CORBA disabled. 


- 'ConsumerDispatch'
 
  Provides simple event filtering based on a type field in the Event
  header.


- 'CorrelationFilter' 

  Allows logical event correlation filtering using operators such as
  AND, OR etc


- 'EventAny' 

  Pushes CORBA Any as the event data (OMG Spec) [push
  (Any)]. Available only with CORBA enabled. Note that the other
  possibility is having Event structs - EventStruct - which most
  features require and automatically pull in.


- 'EventObject' 

  Pushes java.lang.Object as the event data. Available only with CORBA
 disabled [push (Object)]


- 'EventPull' 

  Enables the Event Pull interfaces


- 'EventBodyString' 

  Makes the event payload a string


- 'EventBodyAny' 

  Makes the event payload a CORBA Any


- 'EventBodyObject' 

  Makes the event payload a java.lang.Object


- 'EventBodyOctetSeq' 

  Makes the event payload an Octet sequence - which maps to byte [] in
  Java


- 'EventType' 

  Enables the type field on the Event header


- 'EventVector' 

  Enables support for pushing a vector (or sequence) of Events


- 'RealtimeDispatcher' 

  Support for real-time dispatching of events using RT Java.


- 'RtecCorrelationFilter' 

  Support for emulation of the TAO RTEC Correlation Filter's
  semantics. OR, AND etc are n-ary operators etc.


- 'SourceFilter' 

  Support for simple filtering based on the source field of the Event
  header.


- 'SupplierDispatch' 

  Support for supplier based dispatching based on type


- 'TimeStamp' 

  Enables timestamping of events as they are received by the event
  channel.


- 'Tracing' 

  Support for tracing method execution in the event channel. Very
  useful for debugging. Requires log4j to be present.


- 'Ttl' 

  Support for the Time to Live (TTL) field in federated event
 channels.


