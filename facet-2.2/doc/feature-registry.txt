Feature Registry
----------------

The various features in FACET are managed by a sophisticated feature
metadata management framework known as the Feature Registry. This
registry is a generic framework which allows one to add new features
to FACET in as transparent a manner as possible.


Features in FACET are of various types :

 - Abstract features


   A feature which weaves itself into the Base to provide some basic
   functionality (typically required by a bunch of other features) but
   one which is incomplete in itself. It requires a concrete feature
   which depends on it to be included for the FACET configuration to
   be meaningful.

   An example of an abstract feature is the EventSource feature which
   merely adds the appropriate field to the EventHeader structure.


 - Mutex features


   Mutex features typically contain no code but are used in exactly
   the same way a mutex variable is used in concurrent
   programming. Two different features which acquire the same mutex
   can never be enabled in the same configuration. Doing so triggers a
   feature validation error which can be corrected by deselecting one
   of the features acquiring the mutex feature.

   An example of this is the TransportTypeMutex feature which is used
   by the EnableCorba and DisableCorba features. Obviously, in any
   configuration, you can't both enable and disable the use of CORBA
   in the event channel! Other mutex features include
   PayloadTypeMutex, FilterTypeMutex etc.


 - Concrete features

   Concrete features contain code and generally depend on a number of
   other features (abstract, mutex and other concrete features).

   A concrete feature is the only kind of feature that can be selected
   by itself subject to constraints imposed by the feature
   dependencies it posseses.
 

These various kinds of features allow us to represent complex
dependencies and inter-relationships between various features -
something a flattened structure would not permit. Features are
internally represented as Directed Acyclic Graph and all validation is
performed by analysis of the graph - its vertices and edges.

The feature framework is contained in the feature directory (under the
src/edu/wustl/doc/facet tree) and contains various classes to
represent the feature graph as well as the algorithms to verify
dependencies, generate all possible combinations etc etc.

When building a configuration of FACET, you ordinarily do not need to
concern yourself with the details of these features. Any errors in the
configuration are detected during the feature validation phase and the
appropriate corrective action is advised.
