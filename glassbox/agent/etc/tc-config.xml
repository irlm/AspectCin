<?xml version="1.0" encoding="UTF-8"?>
<!--
	
	All content copyright (c) 2003-2006 Terracotta, Inc.,
	except as may otherwise be noted in a separate copyright notice.
	All rights reserved
	
-->
<tc:tc-config xmlns:tc="http://www.terracotta.org/config">
	<!-- Server is colocated with client and DSO is listening on
		default port (9510). -->
	<servers>
		<server name="localhost" />
	</servers>

	<!-- Tell DSO where to put the generated client logs
		See the Terracotta DSO Guide for additional information. -->
	<clients>
		<logs>%(user.home)/terracotta/jmx/client-logs</logs>
		<dso>
			<debugging>
				<instrumentation-logging>
					<class>true</class>
					<hierarchy>true</hierarchy>
					<locks>true</locks>
					<transient-root>true</transient-root>
					<roots>true</roots>
					<distributed-methods>false</distributed-methods>
				</instrumentation-logging>

				<!-- This section controls output from the DSO client related to
					operations occurring at runtime. See the Product Guide for
					more details; each individual element controls a different
					kind of output. -->

				<runtime-logging>
					<lock-debug>true</lock-debug>
					<partial-instrumentation>true</partial-instrumentation>
					<non-portable-warning>true</non-portable-warning>
					<wait-notify-debug>false</wait-notify-debug>
					<distributed-method-debug>false</distributed-method-debug>
					<new-object-debug>false</new-object-debug>
				</runtime-logging>

				<!-- This section controls the exact format of the output from
					any options enabled under 'runtime-logging', above. See
					the Product Guide for more details; each individual element
					controls a different kind of output. -->

				<runtime-output-options>
					<find-needed-includes>true</find-needed-includes>
					<auto-lock-details>true</auto-lock-details>
					<caller>false</caller>
					<full-stack>false</full-stack>
				</runtime-output-options>
			</debugging>
		</dso>
	</clients>

	<application>
		<!-- See the Terracotta Spring Guide for more details of the the <spring/> 
			section of the  tc-config file -->
		<spring>
			<!-- Tell DSO about the webapp we're sharing -->
			<jee-application name="*glassbox*">
		        <session-support>true</session-support>
				<application-contexts>
					<application-context>
						<!-- Tell DSO the location of the bean definition file for this 
							application context -->
						<paths>
							<path>*beans.xml</path>
						</paths>
						<!-- Here we're telling DSO about the list of Spring beans that we
							we wish to share -->
						<beans>
							<bean name="distributedRegistryHolder">
								<non-distributed-field>local</non-distributed-field>
							</bean>
						</beans>
					</application-context>
				</application-contexts>

				<!-- Our app requires these custom objects/classes to be shared - the following declarations
					tells DSO which ones they are. When the app runs under DSO, instances of these classes
					will broadcast changes in their state.
					
					A good idiom when writing an app that you intend to cluster via TC DSO, is to group the 
					classes you wish to share under a single package (although if you follow the MVC pattern
					this tends to happen naturally) - this way the list of classes you wish to instrument
					can be concise -->
				<instrumented-classes>
					<include>
						<class-expression>glassbox..*</class-expression>
					</include>
				</instrumented-classes>
				<locks>
					<!-- Specifies an autolock. -->
					<autolock>
						<method-expression>* glassbox.track.api.StatisticsRegistryHolderImpl.copy(..)</method-expression>
						<lock-level>write</lock-level>
					</autolock>
				</locks>
			</jee-application>
		</spring>
	</application>
</tc:tc-config>
